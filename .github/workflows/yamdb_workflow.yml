name: yamdb_final workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Dependecies and tests
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 
        python -m flake8 
        python -m pytest

  # build_and_push_to_docker_hub:
  #     name: Push Docker image to Docker Hub
  #     runs-on: ubuntu-latest
  #     needs: tests
  #     steps:
  #       - name: Check out the repo
  #         # Проверка доступности репозитория Docker Hub для workflow
  #         uses: actions/checkout@v2 
  #       - name: Set up Docker Buildx
  #         # Вызов сборщика контейнеров docker
  #         uses: docker/setup-buildx-action@v1 
  #       - name: Login to Docker 
  #         # Запуск скрипта авторизации на Docker Hub
  #         uses: docker/login-action@v1 
  #         with:
  #           username: ${{ secrets.DOCKER_USERNAME }} 
  #           password: ${{ secrets.DOCKER_PASSWORD }} 
  #       - name: Push to Docker Hub
  #         # Пуш образа в Docker Hub 
  #         uses: docker/build-push-action@v2 
  #         with:
  #           push: true
  #           tags: ${{ secrets.DOCKER_USERNAME }}/infra:latest

  # deploy:
  #     runs-on: ubuntu-latest
  #     needs: build_and_push_to_docker_hub
  #     steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY}}
  #         script: |
  #           # Выполняет pull образа с DockerHub
  #           sudo docker stop $(sudo docker ps -a -q)
  #           sudo docker run --rm -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/infra

  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - name: send message
  #     uses: appleboy/telegram-action@master
  #     with:
  #       to: ${{ secrets.TELEGRAM_TO }}
  #       token: ${{ secrets.TELEGRAM_TOKEN }}
  #       message: ${{ github.workflow }} успешно выполнен!